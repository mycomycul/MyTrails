@model MyTrails.ViewModels.CombineViewModel

@{
    ViewBag.Title = "Manual data joiner";
}





<div>
    <h3>Select a trail in the database and any trail names from the GeoData that match to combine their data</h3>
</div>
<div class="row">
    <div class="col-sm-6">
        <label for="Trails">Trails in Database without Geometry</label>
        <div style="overflow:auto;height:300px;">
            <ul class="list-group" id="Trails">

                @foreach (var item in Model.Trails)
                {
                    <li class="list-group-item single-select">  @Html.DisplayFor(modelItem => item)</li>

                }
            </ul>
        </div>
    </div>
    <div class="col-sm-6">
        <label for="GeoData">Trails in GeoData File with Trail in DB</label>
        <div style="overflow:auto;height:300px;">
            <ul class="list-group" id="GeoData">

                @foreach (var item in Model.TrailSections)
                {
                    <li class="list-group-item multi-select" data-featurenumbers="[]">@item</li>

                }
            </ul>
        </div>
    </div>




</div>
<div class ="row" style="text-align:center;">
    <button id="combineclick" onclick="submitCombine()" value="click to combine">Save geodata to trail</button>
</div>


<div id="map" class="map trail-combine-map"></div>


<script src="~/Credentials/Credentials.js"></script>
@*<script>
    (function (d) {
        var file = 'https://maps.googleapis.com/maps/api/js?key=' + googlekey + '&callback=myMap';
        var ref = d.getElementsByTagName('script')[0];
        var js = d.createElement('script');
        js.src = file;
        ref.parentNode.insertBefore(js, ref);
    }(document));</script>*@

@Scripts.Render("~/bundles/trailcombine")
@Scripts.Render("~/bundles/map")